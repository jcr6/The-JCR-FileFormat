JCR6 file format
================


This is only a quick description of how a JCR6 file is set up.
Please note, this document was set up on February 7, 2021, and some changes may have taken place later. 
As long as the changes keep the existing JCR6 libraries backwards compatible I will keep calling it JCR6.
If this is no longer possible I will likely start up JCR7.


Terms
=====
int - In JCR6 that is always a signed 32-bit integer in LITTLE Endian
byte - a signed 8-bit integer
string - a series of bytes and in JCR6 always prefixed with an int telling JCR6 how many bytes fit in the string.

JCR6 has NO support for non-ASCII characters in its own strings. Never forget that.



Basically a JCR6 file contains the following
- Header + Directory offset
- Global config
- Directory
- Data itself



Header
======
A JCR6 file contains a header of 5 bytes. The first four containing the characters "JCR6" and then followed with character 26 (1a). Merely a trick to fool the DOS based "type" command, however in PowerShell and Unix systems, that doesn't work anymore. XD

Right after the header an in value containing the offset where JCR6 can find the directory is stored.



Global Config
=============
The global config can contain data of all sorts of things. Most of my JCR6 based projects don't even use this at this moment, but it can still be handy.
The global config contains variables and they are all prefixed with a tag, then the name, then the value.

byte tag
string variable name
if the tag is 1 the value is a string, if the tag is 2 the value is a boolean (byte containing 0 or 1) and if the tag is 3 it's an int.

when tag value 255 is found, JCR6 immediately stops reading the global config, as this means the end has been reached.


Directory
=========
When it comes to the directory the same tagging system is used. Only a more complex version if it.

The directory starts at the offset defined right after the JCR6 header at the start of the file.

As JCR6 supports compressing its directory data the directory first contains this:
int uncompressedsize
int compressedsize
string compressionalgorithmname

A JCR6 file uses the name "Store" to denote no compression took place, all other compression algorithms are not supported by default and should require drivers. By rule all compression algorithm names should be in LOWER CASE only, only special names that are default to JCR6's code code may contain uppercase. (Now I won't stop you if you want to violate that rule, but then compatibility issues in future versions of JCR6 may be possible).


After that a byte used as a command tag will follow. The tags mean the following:
0x01 - A new directory data block. A string coming next will contain the details. I'll come back to that later.
0xff - end of directory (normally not needed, but some libraries can be a bit stingy, so best is if directories are always closed with this tag).


Now if the tag was 0x01 a string containing another command can come. These can be the following:

__FILE
This denotes, that the data about a file can be there. Basically a file block has the same format as the main config. A tag (0xff=end, 1=string, 2=boolean, 3=int), a string for the variable name, and then the value in the specific format. Now anything can be stored in these varables, so you can put in all kinds of data you want here. As a rule all variables JCR6 requires are prefixed with a "__" in order to set themselves apart from whatever you can come up with.
these variables are
- string __Entry -- Name of the file (please note in JCR6 filenames are case INSENSITIVE... always).
- string __Storage -- Name of the used compression algorithm 
- int __Size -- File size prior to compression (in other words the "real size")
- int __CSize -- File size after compression (in other words the "compressed size")
- int __Offset -- The offset within the JCR6 file of where to find the data.
What is important to add if you want to write your own JCR6 library as that is NOT stored in the JCR file is that JCR6 should also remember from each entry in which JCR file it lives. After all JCR6 is a patchable format.
